  class Question {
 constructor(text, choices, answer){
    this.text = text;
    this.choices = choices;
    this.answer = choices[answer-1]; 
   }
   isCorrectAnswer = function(choice) { 
    return this.answer === choice;
  }
}  
 
  var questions = [new Question("What is type of s in the following definition?<br><br><div class='codetext'>struct node<br>{<br>&nbsp;&nbsp;&nbsp;  int i;&nbsp;&nbsp;&nbsp;float j;<br> };<br>struct node *s[10] ; <br></div>",["Array of structures","Pointer to array of structures","Array of 10 structuer pointers","Pointer to structure"],3),
new Question("What is type of s1 in the following definition?<br><br><div class='codetext'>struct node<br>{<br>&nbsp;&nbsp;&nbsp;  int i;&nbsp;&nbsp;&nbsp;float j;<br> };<br>struct node *s1  ; <br></div>",["Structure","Pointer to  structure","None of the above",""],2),
new Question("Which statement about a structure is correct? ",["A structure can store multiple variables of similar type","A structure can store multiple variables of different types","A function can return a structure","All are correct"],4),
new Question("  <div class='codetext'>struct aa<br>{<br>&nbsp;&nbsp;  int n1;<br>&nbsp;&nbsp;   float m1;<br>};<br>struct aa s1;<br></div>To access n1 of the structure s1, you should use",["s1[n1]","s1.n1","s1->n1","None of these"],2),
new Question("Which of these is a difference between an array and a structure? ",["Array  contains similar type of data but structure  contains dissimilar type of data","A function can return a structure but it can not return an array","One structure can be assigned to another structure of same type. An array can not be assigned to another array","All of these"],4),
new Question("A function is written to read a structure. What are the errors if any in this function?<br><br><div class='codetext'>struct emp<br>{&nbsp;&nbsp;&nbsp; int id;<br>&nbsp;&nbsp;&nbsp; char name[30];<br>&nbsp;&nbsp;&nbsp;  double salary;<br>};<br>void read_emp(struct emp s1)<br>{<br>&nbsp;&nbsp;  scanf('%s %d %lf',s1.name,&s1.id,&s1.salary);<br> }<br></div>",["A structure is sent as value parameter so the caller will not see change to the structure","A function can not have a structure parameter","Both 1 and 2","None of these"],1),
new Question("What are the sizes of variables a and b in bytes? Assume size of an int is 4 bytes. <br><br><div class='codetext'>union un1<br>{<br>&nbsp;&nbsp;&nbsp;int a;<br>&nbsp;&nbsp;&nbsp;float b;<br>};<br>struct st1<br>{<br>&nbsp;&nbsp;&nbsp;int a;<br>&nbsp;&nbsp;&nbsp;float b<br>;};<br>union un1 a;<br> struct st1 b;<br></div>",["8 8","4 4 ","4 8","None of these"],3),
new Question("Which of the following statements are true? ",["An array is sent to function as call by value parameter","An structure is sent to function as call by value parameter","An array is sent to function as call by reference parameter","Both 2 and 3"],4),
new Question("Find out errors if any.<br><br><div class='codetext'>struct foo{&nbsp;&nbsp;&nbsp;int a; float b;};<br>struct foo function1(){<br>&nbsp;&nbsp;&nbsp; struct foo temp;<br>&nbsp;&nbsp;&nbsp; scanf('%d %f',&temp.a,&temp.b);<br>&nbsp;&nbsp;&nbsp;return temp;<br>}<br></div>",["A function can not return a structure","function1 should have a structure parameter","No errors","scanf statement should be<br>scanf('%d %f',&temp->a,&temp->b);"],3),
new Question("How do we assign value 10 to 'a'  using structure pointer 'ptr'  in the code below?<br><br><div class='codetext'>struct foo<br>{<br>&nbsp;&nbsp;int a,b;<br>} st1;<br>struct foo *ptr;<br>ptr = (struct foo*)malloc(sizeof(struct foo));<br></div>",["(*ptr).a=10","ptr-&gt;a=10","1 or 2","None of these"],3),
new Question("What is a self referential structure? ",["A structure which points to itself","A structure which has an element of type pointer to the same structure","A structure pointer pointing to itself","None of the above"],2),
new Question("What does the following printf statement print?  <br><br><div class='codetext'>struct abcd<br>{<br>&nbsp;&nbsp; int no;<br>&nbsp;&nbsp; char name[25];<br>}<br>struct abcd n1[]=<br>{{12,'Fred'},{15,'Martin'},{8,'Peter'},{11,Nicholas'}};<br>printf('%d%d',n1[2].no,(*(n1 + 2).no) + 1); <br></div>",["8 9","9 9","8 8","8 Unpredictable value"],1),
new Question("Which of the following comments about the members of structures is true? ",["Storage class can be assigned to individual member","Individual members can be initialized within a structure type declaration"," The scope of the member name is confined to the particular structure, within which it is defined","None of the above"],3),
new Question("Which properly declares a variable of type structure <i>foo</i> if foo is defined as <br><br><div class='codetext'>struct foo<br>{<br>&nbsp;&nbsp;int n1;<br>};<br></div>",["struct foo.a;","struct  a;","foo a;","struct foo a;"],4),
new Question("What is the correct syntax to declare a function<i> foo()</i> which has an array of structures as a parameter? ",[" void foo(struct *abc);","void foo(struct *abc[]);","void foo(struct abc);","None of the above"],1),
new Question("In C, structure values can be passed as arguments to function by ----------? ",["passing individual members of the structure as an arguments","passing the entire structure to the called function","passing address of the structure","All of these"],4),
new Question("a-&gt;b  is syntactically correct if -----? ",["a and b are structures"," a is a structure and b is a pointer to structure","a is a pointer to structure and b is a structure","a is a pointer to structure in which b is a field in that structure"],4),
new Question("Which of the following operations is illegal in structures? ",[" Typecasting of one structure  to another structure of different type","Defining a structure with a member which is pointer  to the same structure","Dynamic allocation of memory for structure","All of the above"],1),
new Question("Presence of code like  s.t.b = 10 indicates ",["Syntax error","Nested structures","structure with double data type ","an ordinary value"],2),
new Question("The correct syntax to access the field b of the <i>i</i>th structure in the array of structures s  is -----<br><br><div class='codetext'> struct temp<br> {<br>&nbsp;&nbsp; int b;<br> } s[50];<br></div>",[" s.b.[i]","s.[i].b"," s.b[i]","s[i].b"],4),
new Question("Size of a union is determined by size of the ---------? ",["First member of union","Largest member of union","Smallest member of union"," Sum of the sizes of all members"],2),
new Question("What is xyz in this code?<br><br><div class='codetext'>struct foo<br>{<br>&nbsp;&nbsp;int a,b,c;<br>&nbsp;&nbsp;float d;<br>};<br>struct foo xyz();<br></div>",["A structure variable of type foo","A pointer to structure foo","A function which returns a structure foo","None of the above"],3),
new Question("What are the errors in this code?<br><br><div class='codetext'>struct foo<br>{<br>&nbsp;&nbsp;int a;<br>&nbsp;&nbsp;float b;<br>};<br>struct foo s1={2,3};<br>struct foo s2 = s1;<br></div>",["Line 2 is wrong. You can not initialize a structure","Line 3 is wrong. A structure can not be assigned to another","No error",""],3),
new Question("What does function fn do in the above code?<br><br><div class='codetext'>struct foo<br>{<br>&nbsp;&nbsp;int a;<br>&nbsp;&nbsp;float b;<br>}<br>void fn(struct foo*ptr)<br>{<br>&nbsp;&nbsp;&nbsp;scanf('%d %f',&ptr->m,&ptr->b);<br>}<br></div>",["Takes a structure pointer argument, reads structure and modifies it","Produces error as -> is a wrong operator","Produces run time error because pointer is not allocated memory",""],1),
new Question("What is the output of the following code?<br><br><div class='codetext'>#include&lt;stdio.h&gt;<br>enum colors {red,blue,green=5,yellow};<br>int main()<br>{<br>&nbsp;&nbsp;&nbsp;enum colors c=blue;<br>&nbsp;&nbsp;&nbsp;enum colors c1 = yellow; <br>&nbsp;&nbsp;&nbsp;printf('blue is %d and yellow is %d',c,c1);<br>}<br><br></div>",["blue is 4 and yellow is 6","blue is 2 and yellow is 4","blue is 1 and yellow is 6","None of the above"],3),
new Question("An array element is accessed using [] operator and index. A structure element is accessed using ----- ",["[] operator and member name",". operator and member name","-> operator and member name","None of the above"],2),
];
